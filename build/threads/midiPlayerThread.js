function readUintBE(e,t,s){let n=0;for(let a=0;a<s;a++)n=n<<8|e.getUint8(t+a);return n>>>0}postMessage({m:"online"}),self.onmessage=e=>{try{const{buffer:n,trackIndices:a,trackOffsets:c}=e.data,r=new DataView(n),i={NOTE_ON:9,NOTE_OFF:8,CONTROL_CHANGE:11,SET_TEMPO:81,END_OF_TRACK:47},o=8;function t(e){let t=0,s=e,n=!0;for(;n;){const s=r.getUint8(e);t=t<<7|127&s,++e,n=!!(128&s)}return[t,e-s]}function s(e){let s=0,n=2048,a=new ArrayBuffer(n*o),f=new DataView(a);const l=[];let U=0,g=0,u=0;const k=c[e];let w=k+8;const d=w+r.getUint32(k+4);for(;w<d;){const c=t(w);w+=c[1],g+=c[0];let U=r.getUint8(w);U<128?U=u:(u=U,++w);const k=U>>4;let E,p,m,O,T=!1;switch(k){case 8:case 9:E=k;p=15&U,m=r.getUint8(w++),O=r.getUint8(w++);break;case 11:E=k;const e=r.getUint8(w++);64!==e&&(T=!0),p=15&U,m=e,O=r.getUint8(w++);break;case 10:case 14:++w;case 12:case 13:++w,T=!0;break;case 15:if(255===U){const e=r.getUint8(w++),s=t(w);switch(w+=s[1],e){case 81:if(3!==s[0])T=!0;else{const e=readUintBE(r,w,3);l.push({tick:g,uspq:e}),E=i.SET_TEMPO,p=e>>16&255,m=e>>8&255,O=255&e}break;case 47:E=i.END_OF_TRACK,w=d;break;default:T=!0}w+=s[0]}else if(240===U||247===U){T=!0;const e=t(w);w+=e[0]+e[1]}else T=!0;break;default:T=!0}if(!T){if(s>=n){n*=2;const e=new ArrayBuffer(n*o);new Uint8Array(e).set(new Uint8Array(a)),a=e,f=new DataView(a)}const t=s*o;if(g>4294967295)throw new Error(`MIDI file too long! Track ${e} tick count exceeds the maximum supported by the parser.`);f.setUint32(t,g),f.setUint8(t+4,E),f.setUint8(t+5,p||0),f.setUint8(t+6,m||0),f.setUint8(t+7,O||0),++s}}a=a.slice(0,s*o),U=g,postMessage({m:"data",trackIndex:e,packedBuffer:a,tempoEvents:l,totalTicks:U},[a])}for(const f of a)s(f);postMessage({m:"exit",code:0})}catch(l){postMessage({m:"error",error:`${l.message}\n    ${l.stack}`}),postMessage({m:"exit",code:1})}};